name: cms-deployments
on:
  push:
    branches:
      - main
    paths:
      - 'Dockerfile'
      - '.github/workflows/**'
jobs:
 build:
   runs-on: ubuntu-latest
   steps:
   - uses: actions/checkout@v2
     with:
       fetch-depth: 0
   - uses: sonarsource/sonarqube-scan-action@master
     env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      # env:
      # SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
   - name: Install doctl
     uses: digitalocean/action-doctl@v2
     with:
       token: ${{secrets.DIGITALOCEAN_ACCESS_TOKEN}}

   - name: Build container image
     run: docker build -t ${{ secrets.REGISTRY_NAME }}/cms-service:$(echo $GITHUB_SHA | head -c7) .

   - name: Log in to DigitalOcean Container Registry with short-lived credentials
     run: doctl registry login --expiry-seconds 600

  #  - name: Tag Image
  #    run:
  #       docker tag account.dcr/account-service \
  #       registry.digitalocean.com/account-dcr/account-service:${{github.event.input.version}}

   - name: Push image to DigitalOcean Container Registry
     run: docker push ${{ secrets.REGISTRY_NAME }}/suresalama-cms-service:$(echo $GITHUB_SHA | head -c7)

   - name: Update deployment file
     run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|${{ secrets.REGISTRY_NAME }}/cms-service:'${TAG}'|' $GITHUB_WORKSPACE/deployment.yaml

   - name: Save DigitalOcean kubeconfig with short-lived credentials
     run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}

    # If you haven't already integrated with your registry and only want workloads in a particular namespace to be able to pull 
    # from your registry, uncomment the next two commands.
    #- name: Upload credentials of your registry to your DigitalOcean Kubernetes cluster
    #  run: doctl registry kubernetes-manifest | kubectl apply -f -

    #- name: Reference the secret you just uploaded as an imagePullSecrets
    #  run: "kubectl patch serviceaccount default -p '{\"imagePullSecrets\": [{\"name\": \"registry-<your-registry-name>`\"}]}'"

   - name: Deploy to DigitalOcean Kubernetes
     run: kubectl apply -f $GITHUB_WORKSPACE/deployment.yaml

   - name: Verify deployment
     run: kubectl rollout status deployment/cms-service
